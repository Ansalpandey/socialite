/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

kotlin {
    jvmToolchain(17)
}

android {
    namespace 'com.example.android.social'
    compileSdk 33

    defaultConfig {
        applicationId 'com.example.android.social'
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs = ['-Xcontext-receivers']
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    def composeBom = platform('androidx.compose:compose-bom:2023.04.00')
    implementation composeBom
    androidTestImplementation composeBom
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation 'androidx.navigation:navigation-compose:2.5.3'

    def accompanist_version = '0.30.0'
    implementation "com.google.accompanist:accompanist-drawablepainter:$accompanist_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"

    def lifecycle_version = '2.6.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"

    def room_version = '2.5.1'
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    implementation 'androidx.core:core-splashscreen:1.0.1'

    def concurrent_version = "1.1.0"
    implementation "androidx.concurrent:concurrent-futures-ktx:$concurrent_version"

    def camera_version = '1.3.0-alpha06'
    implementation "androidx.camera:camera-core:$camera_version"
    implementation "androidx.camera:camera-camera2:$camera_version"
    implementation "androidx.camera:camera-lifecycle:$camera_version"
    implementation "androidx.camera:camera-view:$camera_version"

    implementation "androidx.compose.material:material-icons-extended"

    androidTestImplementation 'app.cash.turbine:turbine:0.12.3'

    def coil_version = '2.4.0'
    implementation("io.coil-kt:coil:$coil_version")
    implementation("io.coil-kt:coil-compose:$coil_version")

}
